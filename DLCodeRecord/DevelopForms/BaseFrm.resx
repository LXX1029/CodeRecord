<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAACQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA0dTYGP7+/wIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP///////wAA////////
        AAD///////8AAP///Af//wAA///gAf//AAD//8AAf/8AAP//AAA//wAA//4AAB//AAD//AAAD/8AAP/4
        AAAH/wAA//gAAAP/AAD/8AAAA/8AAP/gAAAB/wAA/+AAAAH/AAD/wAAAAf8AAP/AAAAA/wAA/8AAAAD/
        AAD/wAAAAP8AAP/AAAAA/wAAvwAAAAD+AACAAAAAABAAAIAAAAAAAAAAxwAAAAABAADgAAAAAAMAAPAA
        AAAABwAA+MAAAACPAAD/wAAAAf8AAP+AAAAB/wAA/gAAAAB/AAD8AAAAAD8AAPgAAAAAHwAA+DAAAAYP
        AADw+AAAD4cAAOPwAAAP4wAA5/AAAAfzAAD/4QAAQ/sAAP/DgADh/wAA/8fgA/H/AAD/z/AH8f8AAP/P
        /B/5/wAA/8////n/AAD/z///+f8AAP/P///5/wAA////////AAD///////8AAP///////wAA////////
        AAA=
</value>
  </data>
</root>